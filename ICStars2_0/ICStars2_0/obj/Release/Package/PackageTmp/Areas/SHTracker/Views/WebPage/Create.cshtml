@model ICStars2_0.Model.WebPage

@{
    ViewBag.Title = "Create A Web Page";
    Layout = "~/Areas/SHTracker/Views/Shared/_Layout.cshtml";
}
@section Head {
    @Styles.Render("~/bundles/Site")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/SHTracker/Scripts/CkEditor/ckeditor.js"></script>
<script src="~/SHTracker/Scripts/CkEditor/CheckCompatibility.js"></script>

<script type="text/javascript">
    $(function () {
        CKEDITOR.replace('Content', { height: 500 });
        CKEDITOR.replace('Content', { allowedContent: true });
    });

   
</script>

}
<h2>Create a web page</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Article</legend>
        @if (Model!=null && !string.IsNullOrEmpty(Model.Url))
        {
            @Html.HiddenFor(m=>m.Url)
            <div class="editor-label">
                @Html.LabelFor(model => model.Url)
            </div>
            <div class="editor-field">
                @Model.Url
                @Html.ValidationMessageFor(model => model.Url)
            </div>
        }
        else
        {
            <div class="editor-label">
                @Html.LabelFor(model => model.Url) (This would be the url of this webpage. Please make a friendly url with letters, numbers, "-" and "_" only!) 
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Url)
                @Html.ValidationMessageFor(model => model.Url)
            </div>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Content)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Content)
            @Html.ValidationMessageFor(model => model.Content)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            <input type="button" value="Truncate" onclick="$(this).siblings().val($(this).siblings().val().substring(0,155)).blur()" />
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Keywords)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Keywords)
            <input type="button" value="Truncate" onclick="$(this).siblings().val($(this).siblings().val().substring(0,155)).blur()" />
            @Html.ValidationMessageFor(model => model.Keywords)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Layout)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Layout, new[]
            {
                new SelectListItem { Text = "Base", Value = "~/Views/Shared/_Layout.cshtml" },
                new SelectListItem { Text = "BaseWithNavigation", Value = "~/Views/Shared/_Layout2.cshtml" }
            })
            @Html.ValidationMessageFor(model => model.Layout)
        </div>
        <div>
            <b>Important:</b> If you do not know what fields below are for, please leave them <b>EMPTY</b>!
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.RedirectUrl) (Url that the page request will be redirected to)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RedirectUrl)
            @Html.ValidationMessageFor(model => model.RedirectUrl)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Redirect301Url) (Url that the page request will be permanently redirected to)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Redirect301Url)
            @Html.ValidationMessageFor(model => model.Redirect301Url)
        </div>
        <p>
            <input type="submit" value="Submit" />
        </p>
    </fieldset>
}

