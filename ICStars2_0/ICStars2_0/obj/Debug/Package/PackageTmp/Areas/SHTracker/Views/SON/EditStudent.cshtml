@using ICStars2_0.Model
@model ICStars2_0.Model.son_student

@{
    ViewBag.Title = "EditStudent";
    Layout = "~/Areas/SHTracker/Views/Shared/_Layout.cshtml";
}
@section Head {
    
    @Styles.Render("~/bundles/Site")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
}
<h2>EditStudent</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>app_student</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.StudentID)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.StudentID,new {@readonly="readonly"})
            @Html.ValidationMessageFor(model => model.StudentID)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Name,new {@readonly="readonly"})
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ClassSection)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ClassSection)
            @Html.ValidationMessageFor(model => model.ClassSection)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Languages)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model=>model.Languages,new[]
                              {
                                  new SelectListItem
                                      {
                                          Text = "None",
                                          Value = ""
                                      },
                                      new SelectListItem
                                      {
                                          Text = "Polish",
                                          Value = "Polish"
                                      },
                                      new SelectListItem
                                      {
                                          Text = "Spanish",
                                          Value = "Spanish"
                                      },
                                      new SelectListItem
                                      {
                                          Text = "Other",
                                          Value = "Other"
                                      }
                              })
            @Html.ValidationMessageFor(model => model.Languages)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.CPID1)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model=>model.CPID1,new[]
                              {
                                  new SelectListItem
                                      {
                                          Text = "Select Program",
                                          Value = "0",
                                          Selected=Model.CPID1==0
                                      }
                              }.Union( ((IEnumerable<son_cboprogram>)ViewBag.CPSeletedItemList).Select(p=>new SelectListItem{Text=string.Format("{0}:{1}:{2}",p.CBOName,p.ProgramName,p.Location),Value=p.CPID.ToString(),Selected=p.CPID==Model.CPID1})))
            
            @Html.ValidationMessageFor(model => model.CPID1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CPID2)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model=>model.CPID2,new[]
                              {
                                  new SelectListItem
                                      {
                                          Text = "Select Program",
                                          Value = "0",
                                          Selected=Model.CPID2==0
                                      }
                              }.Union( ((IEnumerable<son_cboprogram>)ViewBag.CPSeletedItemList).Select(p=>new SelectListItem{Text=string.Format("{0}:{1}:{2}",p.CBOName,p.ProgramName,p.Location),Value=p.CPID.ToString(),Selected=p.CPID==Model.CPID2})))
            
            @Html.ValidationMessageFor(model => model.CPID2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CPID3)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model=>model.CPID3,new[]
                              {
                                  new SelectListItem
                                      {
                                          Text = "Select Program",
                                          Value = "0",
                                          Selected=Model.CPID3==0
                                      }
                              }.Union( ((IEnumerable<son_cboprogram>)ViewBag.CPSeletedItemList).Select(p=>new SelectListItem{Text=string.Format("{0}:{1}:{2}",p.CBOName,p.ProgramName,p.Location),Value=p.CPID.ToString(),Selected=p.CPID==Model.CPID3})))
            
            @Html.ValidationMessageFor(model => model.CPID3)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.Address)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Zipcode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Zipcode)
            @Html.ValidationMessageFor(model => model.Zipcode)
        </div>

        @Html.HiddenFor(model=>model.Placement1)
        @Html.HiddenFor(model=>model.Placement2)
        @Html.HiddenFor(model=>model.Placement3)

        


        <p>
            <input type="submit" value="Submit" /> @Html.ActionLink("Cancel","Students")
        </p>
    </fieldset>
}

