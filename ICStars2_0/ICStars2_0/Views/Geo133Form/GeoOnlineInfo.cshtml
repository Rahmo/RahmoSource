@model ICStars2_0.Model.GeoOnlineInformation

<script src="~/Scripts/jquery-1.8.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@using (Html.BeginForm("GeoOnlineInfo", "Geo133Form", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>GeoOnlineInformation</legend>

        <div id="Main3">
            <div> Some of this information can be found on multiple web-sites. For questions #12, #15-21, #42-43 go to www.cookcountyassessor.com; #12-14 go to ww.newschicago.org; #22-27 - http://www.cookcountytreasurer.com (add ‘0000’ to the end of the PIN number to access this data); #28-33 go to: http://www.cookcountyclerk.com/tsd/tifs/Pages/tifpropertysearch.aspx#12694822780391&56; #34-37 go to http://chicagotribune.public-record.com/realestate/search/cook (search by date 1/01/2015 – 12/31-2015 and zip code); #38-40 go to http://chicago.blockshopper.com/, www.realestate.yahoo.com, http://www.urbanrealestate.com/ and http://www.trulia.com (search by zip code); #41 is visible on the map at: https://gisapps.cityofchicago.org/zoning/. Some of this information is also available at: http://www.cookcountypropertyinfo.com/Pages/pin-search.aspx and http://cookviewer1.cookcountyil.gov/jsviewer/index.html. </div>
            <table border="1px" width="600px">

                <tr>

                    <td style="border:0px" class="auto-style2"></td>
                    <td colspan="2" class="auto-style2">Assessed Value (newschicgao)</td>
                    <td colspan="2" class="auto-style2">Assessed Value (cookcounty)</td>
                </tr>
                <tr><td style="border:0px"></td><td class="auto-style1">1999</td><td>2001</td><td>2014</td><td>2015</td></tr>
                <tr>
                    <td class="auto-style3">Land (L)</td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesLand__) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesLand__)
                    </td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesLand_) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesLand_)
                    </td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesLand) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesLand)
                    </td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesLandPlus) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesLandPlus)
                    </td>


                </tr>
                <tr>
                    <td>Building (B)</td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesBuilding__) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesBuilding__)
                    </td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesBuilding_) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesBuilding_)
                    </td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesBuilding) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesBuilding)
                    </td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesBuildingPlus) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesBuildingPlus)
                    </td>
                </tr>
                <tr>
                    <td>Total</td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesTotal__) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesTotal__)
                    </td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesTotal_) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesTotal_)
                    </td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesTotal) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesTotal)
                    </td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesTotalPlus) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesTotalPlus)
                    </td>
                </tr>
                <tr>
                    <td>Est. Mkt. Value</td>
                    <td class="auto-style1">n/a</td>
                    <td>n/a</td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesEstMkt) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesEstMkt)
                    </td>
                    <td class="auto-style4">
                        @Html.EditorFor(model => model.AssessedValuesEstMktPlus) $
                        @Html.ValidationMessageFor(model => model.AssessedValuesEstMktPlus)
                    </td>

                </tr>


            </table>
            <div class="textbox">
                @Html.LabelFor(model => model.yearBuild)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.yearBuild)

                @Html.ValidationMessageFor(model => model.yearBuild)


            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.censusTract)
            </div>
            <div class="textbox">
                @Html.DropDownListFor(model => model.censusTract, new SelectList(
    new List<SelectListItem>
    {
          new SelectListItem{ Selected= true , Value = "N/A" , Text = "N/A"  },
        new SelectListItem{ Value = "3103" , Text = "3103"  },
                new SelectListItem { Value = "3104" , Text = "3104" },
                new SelectListItem{ Value = "3105" , Text = "3105"},
                new SelectListItem{ Value = "3106" , Text = "3106"},

    }, "Value", "Text", 1))

                @Html.ValidationMessageFor(model => model.censusTract)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.propertyClass)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.propertyClass)
                @Html.ValidationMessageFor(model => model.propertyClass)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.Stories)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.Stories)
                @Html.ValidationMessageFor(model => model.Stories)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.LandSquareFootage)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.LandSquareFootage)
                @Html.ValidationMessageFor(model => model.LandSquareFootage)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.BuildingSquareFootage)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.BuildingSquareFootage)
                @Html.ValidationMessageFor(model => model.BuildingSquareFootage)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.propertyDescription)
            </div>
            <div class="textbox">
                @Html.RadioButtonFor(model => model.propertyDescription, "Residential ")
                Residential
                @Html.RadioButtonFor(model => model.propertyDescription, " Industrial  ")
                Industrial
                @Html.RadioButtonFor(model => model.propertyDescription, "Commercial  ")
                Commercial
                @Html.RadioButtonFor(model => model.propertyDescription, "Vacant ")
                Vacant
                @Html.RadioButtonFor(model => model.propertyDescription, " Exempt  ")
                Exempt
                @Html.RadioButtonFor(model => model.propertyDescription, " Mixed Use ")
                Mixed Use
                @Html.RadioButtonFor(model => model.propertyDescription, "Other")
                Other
                @Html.ValidationMessageFor(model => model.propertyDescription)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.age)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.age)
                @Html.ValidationMessageFor(model => model.age)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.PropertyTaxExemptions)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.PropertyTaxExemptions) $
                @Html.ValidationMessageFor(model => model.PropertyTaxExemptions)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.TaxExemptionsStatus)
            </div>
            <div class="textbox">
                @Html.RadioButtonFor(model => model.TaxExemptionsStatus, "E")
                Exemption
                @Html.RadioButtonFor(model => model.TaxExemptionsStatus, "NE")
                Not Entitled
                @Html.RadioButtonFor(model => model.TaxExemptionsStatus, "NF")
                None filed/applied

                @Html.ValidationMessageFor(model => model.TaxExemptionsStatus)
            </div>

            <br />
            @*@Html.RadioButtonFor(model => model.propertyDescription, " (Exemption given)   ")
            (Exemption given)
            @Html.RadioButtonFor(model => model.propertyDescription, " Not Entitled ")
            Not Entitled
            @Html.RadioButtonFor(model => model.propertyDescription, "None filed/applied")
            None filed/applied*@
            <br />
            <label>22. the year Property Tax Exemptions from Treasurer Site:    </label>
            @Html.LabelFor(model => model.TreasurerSiteHomeowner)

            <div class="text">
                @Html.EditorFor(model => model.TreasurerSiteHomeowner)
                @Html.ValidationMessageFor(model => model.TreasurerSiteHomeowner)
            </div>

            <div class="textbox">
                @Html.LabelFor(model => model.TreasurerSeniorCitizen)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.TreasurerSeniorCitizen)
                @Html.ValidationMessageFor(model => model.TreasurerSeniorCitizen)
            </div>

            <div class="textbox">
                @Html.LabelFor(model => model.TreasurerSiteSeniorFreeze)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.TreasurerSiteSeniorFreeze)
                @Html.ValidationMessageFor(model => model.TreasurerSiteSeniorFreeze)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.taxPayerName)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.taxPayerName)
                @Html.ValidationMessageFor(model => model.taxPayerName)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.taxpayerMailing)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.taxpayerMailing)
                @Html.ValidationMessageFor(model => model.taxpayerMailing)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.PreviousYearPropertyTax)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.PreviousYearPropertyTax)
                @Html.ValidationMessageFor(model => model.PreviousYearPropertyTax)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.CurrentYearTaxesOwed)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.CurrentYearTaxesOwed) $
                @Html.ValidationMessageFor(model => model.CurrentYearTaxesOwed)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.isCurrentYearAsPrev)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.isCurrentYearAsPrev)
                @Html.ValidationMessageFor(model => model.isCurrentYearAsPrev)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.TaxPayerInfo)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.TaxPayerInfo)
                @Html.ValidationMessageFor(model => model.TaxPayerInfo)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.isInTifDistrict)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.isInTifDistrict)
                @Html.ValidationMessageFor(model => model.isInTifDistrict)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.TifArea)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.TifArea) %
                @Html.ValidationMessageFor(model => model.TifArea)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.BoardOfEducation)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.BoardOfEducation) %
                @Html.ValidationMessageFor(model => model.BoardOfEducation)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.SchoolImprovments)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.SchoolImprovments) %
                @Html.ValidationMessageFor(model => model.SchoolImprovments)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.ParkDistrict)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.ParkDistrict) %
                @Html.ValidationMessageFor(model => model.ParkDistrict)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.LibraryFund)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.LibraryFund) %
                @Html.ValidationMessageFor(model => model.LibraryFund)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.isPropertySoldInCurrentYear)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.isPropertySoldInCurrentYear)
                @Html.ValidationMessageFor(model => model.isPropertySoldInCurrentYear)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.saleDate)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.saleDate)
                @Html.ValidationMessageFor(model => model.saleDate)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.salePrice)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.salePrice)
                @Html.ValidationMessageFor(model => model.salePrice)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.unitNumber)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.unitNumber)
                @Html.ValidationMessageFor(model => model.unitNumber)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.isForSale)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.isForSale)
                @Html.ValidationMessageFor(model => model.isForSale)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.listedPrice)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.listedPrice)
                @Html.ValidationMessageFor(model => model.listedPrice)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.bedroomsNumber)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.bedroomsNumber)
                @*@Html.ValidationMessageFor(model => model.bedroomsNumber)*@
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.isOrange)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.isOrange)
                @Html.ValidationMessageFor(model => model.isOrange)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.isPhotoDownloaded)
            </div>
            <div class="textbox">
                @Html.RadioButtonFor(model => model.isPhotoDownloaded, "Yes")
                Yes
                @Html.RadioButtonFor(model => model.isPhotoDownloaded, "N/A ")
                N/A

                @Html.ValidationMessageFor(model => model.isPhotoDownloaded)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.PhotoDate)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.PhotoDate)
                @Html.ValidationMessageFor(model => model.PhotoDate)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.isFollowingYPhotoTaken)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.isFollowingYPhotoTaken)
                @Html.ValidationMessageFor(model => model.isFollowingYPhotoTaken)
            </div>
            <br />
            <div class="textbox">
                @Html.LabelFor(model => model.StudentPhotoDate)
            </div>
            <div class="textbox">
                @Html.EditorFor(model => model.StudentPhotoDate)
                @Html.ValidationMessageFor(model => model.StudentPhotoDate)
            </div>
            <br />    <br />
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
