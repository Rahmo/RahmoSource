@using System.Collections
@using ICStars2_0.Model
@model ICStars2_0.Model.son_cboprogram

@{
    ViewBag.Title = "EditCBOProgram";
    Layout = "~/Areas/SHTracker/Views/Shared/_Layout.cshtml";
}
@section Head {

    @Styles.Render("~/bundles/Site")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <style type="text/css">
        #addmodel{ display: none;}
    </style>
}
<h2>EditCBOProgram</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>app_cboprogram</legend>

        @Html.HiddenFor(model => model.CPID)

        <div class="editor-label">
            @Html.LabelFor(model => model.CBOName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.CBOName,new{@readonly="readonly"})
            @Html.ValidationMessageFor(model => model.CBOName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ProgramName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ProgramName,new{@readonly="readonly"})
            @Html.ValidationMessageFor(model => model.ProgramName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Slots)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Slots)
            @Html.ValidationMessageFor(model => model.Slots)
        </div>
        <div>
            <input type="button" value="Add Choice" onclick="$(this).parent().after($('#addmodel').clone().show())" />
        </div>
        @foreach (son_cbochoice choice in (IEnumerable<son_cbochoice>)ViewBag.Choices)
        {
            <div>
            @Html.DropDownList("StudentChoice", new[] { new SelectListItem { Text = "Select Student", Value = "0" } }.Union(((IEnumerable<son_student>)ViewBag.Students).Select(s => new SelectListItem { Text = string.Format("{1}:{0}", s.StudentID, s.Name), Value = s.StudentID.ToString(),Selected=s.StudentID==choice.StudentID }))) <input type="button" value="Remove" onclick="$(this).parent().remove();"/>
        </div>
        }
        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Location,new{@readonly="readonly"})
            @Html.ValidationMessageFor(model => model.Location)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Bilingual)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Bilingual,new{@readonly="readonly"})
            @Html.ValidationMessageFor(model => model.Bilingual)
        </div>

        <p>
            <input type="submit" value="Submit" /> @Html.ActionLink("Cancel","CBOs")
        </p>
    </fieldset>
}


        <div id="addmodel">
            @Html.DropDownList("StudentChoice", new[] { new SelectListItem { Text = "Select Student", Value = "0" } }.Union(((IEnumerable<son_student>)ViewBag.Students).Select(s => new SelectListItem { Text = string.Format("{1}:{0}", s.StudentID, s.Name), Value = s.StudentID.ToString() }))) <input type="button" value="Remove" onclick="$(this).parent().remove();"/>
        </div>